defmodule CobsTest do
  use ExUnit.Case
  doctest Cobs

  test "1" do
    assert Cobs.encode(<<0x01>>) == <<0x02, 0x01>>
    assert Cobs.decode(<<0x02, 0x01>>) == <<0x01>>
  end

  test "0" do
    assert Cobs.encode(<<0x00>>) == <<0x01, 0x01>>
    assert Cobs.decode(<<0x01, 0x01>>) == <<0x00>>
  end

  test "double 0" do
    assert Cobs.encode(<<0x00, 0x00>>) == <<0x01, 0x01, 0x01>>
    assert Cobs.decode(<<0x01, 0x01, 0x01>>) == <<0x00, 0x00>>
  end

  test "middle 0" do
    assert Cobs.encode(<<0x01, 0x02, 0x00, 0x03>>) == <<0x03, 0x01, 0x02, 0x02, 0x03>>
    assert Cobs.decode(<<0x03, 0x01, 0x02, 0x02, 0x03>>) == <<0x01, 0x02, 0x00, 0x03>>
  end

  test "no 0" do
    assert Cobs.encode(<<0x01, 0x02, 0x03, 0x04>>) == <<0x05, 0x01, 0x02, 0x03, 0x04>>
    assert Cobs.decode(<<0x05, 0x01, 0x02, 0x03, 0x04>>) == <<0x01, 0x02, 0x03, 0x04>>
  end

  test "tripple 0" do
    assert Cobs.encode(<<0x01, 0x00, 0x00, 0x00>>) == <<0x02, 0x01, 0x01, 0x01, 0x01>>
    assert Cobs.decode(<<0x02, 0x01, 0x01, 0x01, 0x01>>) == <<0x01, 0x00, 0x00, 0x00>>
  end

end
